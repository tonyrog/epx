%% -*- erlang -*-
%% Config file for epx-application
%%
%% efnttool require: freetype
%% ddscomp  require: libpng libungif ffmpeg (swscale/avformat/avutil)
%%
{erl_opts, [debug_info, fail_on_warning]}.

%% -- to many warnings i objective-C
{port_env, [
	    {"CFLAGS", "$CFLAGS -Wall -Wextra -Wswitch-enum -Wswitch-default -fno-common"},
	    {"(.*-i686-.*linux)", "CFLAGS","$CFLAGS -msse2 -O3 -DX11 -DHAVE_INPUT_EVENT -DFB -DHAVE_MTRR"},
	    {"(.*-i686-.*linux)", "CCFLAGS","$CCFLAGS -msse2 -O3 -DX11 -DHAVE_INPUT_EVENT -DFB -DHAVE_MTRR"},
	    {"(.*-i386-.*linux)", "CFLAGS","$CFLAGS -msse2 -O3 -DX11 -DHAVE_INPUT_EVENT -DFB -DHAVE_MTRR"},
	    {"(.*-i386-.*linux)", "CCFLAGS","$CCFLAGS -msse2 -O3 -DX11 -DHAVE_INPUT_EVENT -DFB -DHAVE_MTRR"},
	    {"(.*-x86_64-.*linux)", "CFLAGS","$CFLAGS -msse2 -O3 -DX11 -DHAVE_INPUT_EVENT -DFB -DHAVE_MTRR"},
	    {"(.*-x86_64-.*linux)", "CCFLAGS","$CCFLAGS -msse2 -O3 -DX11 -DHAVE_INPUT_EVENT -DFB -DHAVE_MTRR"},
	    {"(.*-arm.*linux)", "CFLAGS", "$CFLAGS -O3 -DX11 -DHAVE_INPUT_EVENT -DFB"},
	    %% check latest string with rebar_utils:get_arch().
	    {"(armv7l-.*gnueabi-32)", "CFLAGS", "$CFLAGS -mfloat-abi=softfp -mfpu=neon -flax-vector-conversions -D__NEON__"},
	    {"(armv7l-.*gnueabihf-32)", "CFLAGS", "$CFLAGS -mfpu=neon -flax-vector-conversions -D__NEON__"},
	    {"(.*-arm-.*gnueabihf-32)", "CFLAGS", "$CFLAGS -mfpu=neon -flax-vector-conversions -D__NEON__"},

	    {"(linux)", "XLDFLAGS", "$XLDFLAGS -L/usr/lib -lX11"},
	    {"(linux)", "LDFLAGS", "$LDFLAGS $XLDFLAGS"},

	    {"(darwin.*-32)", "CFLAGS", "$CFLAGS -ObjC -DX11 -DMAC_OS_X"},
	    {"(darwin.*-32)", "XLDFLAGS", "$XLDFLAGS -lobjc -L/usr/X11R6/lib -lX11 -framework Carbon -framework CoreFoundation -framework Foundation -framework AppKit"},
	    {"(darwin.*-32)", "LDFLAGS", "$LDFLAGS $XLDFLAGS"},

	    {"(darwin.*-64)", "CFLAGS", "$CFLAGS -arch i386 -arch x86_64 -I/usr/X11R6/include -DX11  -x objective-c"},  %% -DHAVE_OPENGL
	    {"(darwin.*-64)", "XLDFLAGS", "$XLDFLAGS -lobjc -L/usr/X11R6/lib -lX11 -framework Carbon -framework CoreFoundation -framework Foundation -framework AppKit"},
	    {"(darwin.*-64)", "LDFLAGS", "$LDFLAGS -arch i386 -arch x86_64 $XLDFLAGS"}
	   ]}.
{port_specs, [
	      {"(linux)","priv/epx_nif.so",
	       [
		"c_src/epx_debug.c","c_src/epx_hash.c","c_src/epx_dict.c",
		"c_src/epx_pixel.c","c_src/epx_pixmap.c","c_src/epx_anim.c",
		"c_src/epx_line.c", "c_src/epx_ellipse.c","c_src/epx_draw.c",
		"c_src/epx_backend.c","c_src/epx_backend_x11.c",
		"c_src/epx_backend_fb.c","c_src/epx_backend_none.c",
		"c_src/epx_window.c","c_src/epx_font.c",
		"c_src/epx_gl.c","c_src/epx_gc.c","c_src/epx_simd.c",
		"c_src/epx_simd_emu.c",	"c_src/epx_simd_mmx.c",
		"c_src/epx_simd_sse2.c","c_src/epx_simd_neon.c",
		"c_src/epx.c", "c_src/epx_lock.c",
		"c_src/epx_nif.c"
	       ]},

	      {"(darwin.*-32)","priv/epx_nif.so",
	       [
		"c_src/epx_debug.c","c_src/epx_hash.c","c_src/epx_dict.c",
		"c_src/epx_pixel.c","c_src/epx_pixmap.c","c_src/epx_anim.c",
		"c_src/epx_line.c", "c_src/epx_ellipse.c","c_src/epx_draw.c",
		"c_src/epx_backend.c","c_src/epx_backend_x11.c",
		"c_src/epx_backend_macos.c","c_src/epx_backend_none.c",
		"c_src/epx_window.c","c_src/epx_font.c",
		"c_src/epx_gl.c","c_src/epx_gc.c","c_src/epx_simd.c",
		"c_src/epx_simd_emu.c",	"c_src/epx_simd_mmx.c",
		"c_src/epx_simd_sse2.c","c_src/epx.c", "c_src/epx_lock.c",
		"c_src/epx_nif.c"
	       ]},

	      {"(darwin.*-64)","priv/epx_nif.so",
	       [
		"c_src/epx_debug.c","c_src/epx_hash.c","c_src/epx_dict.c",
		"c_src/epx_pixel.c","c_src/epx_pixmap.c","c_src/epx_anim.c",
		"c_src/epx_line.c", "c_src/epx_ellipse.c","c_src/epx_draw.c",
		"c_src/epx_backend.c","c_src/epx_backend_x11.c",
		"c_src/epx_backend_cocoa.c",
		"c_src/epx_backend_none.c",
		"c_src/epx_window.c","c_src/epx_font.c",
		"c_src/epx_gl.c","c_src/epx_gc.c","c_src/epx_simd.c",
		"c_src/epx_simd_emu.c",	"c_src/epx_simd_mmx.c",
		"c_src/epx_simd_sse2.c","c_src/epx.c", "c_src/epx_lock.c",
		"c_src/epx_nif.c"
	       ]}
 	     ]}.

%% git describe --always --tags
%% {"CFG_CFLAGS", "-I`pwd`/include"},
{post_hooks, [
	      {compile, "mv c_src/epx_nif.o c_src/epx_nif.p"},
	      {compile, "rm -f priv/epx.a"},
	      {compile, "ar rcv priv/epx.a c_src/*.o"},
	      {compile, "ranlib priv/epx.a"},
	      {compile, "mv c_src/epx_nif.p c_src/epx_nif.o"},
	      {compile, "sed -e 's;%EPX_VSN%;1.0;' -e 's;%CFLAGS%;-I'\"${PWD}\"'/include;' -e 's;%LDFLAGS%;'\"${PWD}/priv/epx.a -lm ${XLDFLAGS}\"';' < c_src/epx-config.src > priv/epx-config"},
	      {compile, "chmod +x priv/epx-config"}
	     ]}.

%% {edoc_opts, [{doclet, edown_doclet}]}.
